// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0

package db

import (
	"github.com/jackc/pgx/v5/pgtype"
)

type Assignment struct {
	ID               int64       `json:"id"`
	ModuleID         int64       `json:"module_id"`
	CourseID         int64       `json:"course_id"`
	Title            string      `json:"title"`
	Description      string      `json:"description"`
	Content          []byte      `json:"content"`
	Days             pgtype.Int4 `json:"days"`
	AssignmentTypeID int64       `json:"assignment_type_id"`
	CreatedAt        pgtype.Date `json:"created_at"`
}

type AssignmentsType struct {
	ID   int32  `json:"id"`
	Name string `json:"name"`
}

type Category struct {
	ID    int64  `json:"id"`
	Name  string `json:"name"`
	Color int32  `json:"color"`
}

type Comment struct {
	ID       int64  `json:"id"`
	UserID   int64  `json:"user_id"`
	Content  string `json:"content"`
	ThreadID int64  `json:"thread_id"`
}

type Course struct {
	ID             int64       `json:"id"`
	Title          string      `json:"title"`
	Description    string      `json:"description"`
	Image          pgtype.Text `json:"image"`
	CourseProvider int64       `json:"course_provider"`
}

type CourseCategory struct {
	CourseID   int64 `json:"course_id"`
	CategoryID int64 `json:"category_id"`
}

type CourseTeacher struct {
	UserID   int64 `json:"user_id"`
	CourseID int64 `json:"course_id"`
}

type Enrollment struct {
	ID         int64       `json:"id"`
	EnrolledOn pgtype.Date `json:"enrolled_on"`
	CourseID   int64       `json:"course_id"`
	UserID     int64       `json:"user_id"`
}

type Module struct {
	ID       int64  `json:"id"`
	Title    string `json:"title"`
	CourseID int64  `json:"course_id"`
}

type Progress struct {
	AssignmentID int64       `json:"assignment_id"`
	UserID       int64       `json:"user_id"`
	Done         pgtype.Date `json:"done"`
	Pass         bool        `json:"pass"`
}

type Rating struct {
	ID        int64 `json:"id"`
	CommentID int64 `json:"comment_id"`
	Rate      bool  `json:"rate"`
}

type Submission struct {
	ID           int64       `json:"id"`
	AssignmentID int64       `json:"assignment_id"`
	Delay        pgtype.Int4 `json:"delay"`
	Content      []byte      `json:"content"`
	Info         pgtype.Text `json:"info"`
	UserID       int64       `json:"user_id"`
	SubmittedAt  pgtype.Date `json:"submitted_at"`
}

type Thread struct {
	ID       int64       `json:"id"`
	ModuleID int64       `json:"module_id"`
	Title    string      `json:"title"`
	Content  pgtype.Text `json:"content"`
	UserID   int64       `json:"user_id"`
}

type User struct {
	ID          int64       `json:"id"`
	Login       string      `json:"login"`
	Password    string      `json:"password"`
	Surname     pgtype.Text `json:"surname"`
	Firstname   pgtype.Text `json:"firstname"`
	Profile     pgtype.Text `json:"profile"`
	Description pgtype.Text `json:"description"`
	UserRoleID  int32       `json:"user_role_id"`
}

type UserRole struct {
	ID    int32  `json:"id"`
	Title string `json:"title"`
}
